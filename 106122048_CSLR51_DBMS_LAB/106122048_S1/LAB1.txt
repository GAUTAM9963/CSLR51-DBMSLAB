 a. Find year from date
mysql> SELECT YEAR('2024/07/16');
+--------------------+
| YEAR('2024/07/16') |
+--------------------+
|               2024 |
+--------------------+


b. Check whether date passed to query is of given format or not
mysql> SELECT DATE('07/07/2024');
+--------------------+
| DATE('07/07/2024') |
+--------------------+
| NULL               |
+--------------------+


c. Find the size of the SCHEMA/USER.


d. Display the current time
mysql> SELECT CURTIME();
+-----------+
| CURTIME() |
+-----------+
| 15:08:25  |
+-----------+


e. Given a date retrieve next day's date
mysql> select date_add('2003/12/11', interval 1 day);
+----------------------------------------+
| date_add('2003/12/11', interval 1 day) |
+----------------------------------------+
| 2003-12-12                             |
+----------------------------------------+


f. Get database date
mysql> SELECT CURDATE();
+------------+
| CURDATE()  |
+------------+
| 2024-07-25 |
+------------+


g. Returns the default(current) database name.
mysql> select database();
+------------+
| database() |
+------------+
| NULL       |
+------------+


h. Retrieve the current MySQL user name and host name.
mysql> SELECT USER() AS 'Current User',
    ->        @@hostname AS 'Host Name';
+----------------+------------------------+
| Current User   | Host Name              |
+----------------+------------------------+
| root@localhost | nitt-OptiPlex-7470-AIO |
+----------------+------------------------+


i. Find the string that tells the MySQL server version.
mysql> SELECT VERSION();
+-------------------------+
| VERSION()               |
+-------------------------+
| 8.0.36-0ubuntu0.20.04.1 |
+-------------------------+


j. Perform Bitwise OR, Bitwise XOR and Bitwise AND
mysql> select 3&4, 3|4, 3^4;
+-----+-----+-----+
| 3&4 | 3|4 | 3^4 |
+-----+-----+-----+
|   0 |   7 |   7 |
+-----+-----+-----+


k. Find the difference between two dates and print in terms of the number of days.
mysql> select datediff('2003/12/12','2003/12/05');
+-------------------------------------+
| datediff('2003/12/12','2003/12/05') |
+-------------------------------------+
|                                   7 |
+-------------------------------------+


l. Add one day to the current date.
mysql> SELECT DATE_ADD(CURDATE(), INTERVAL 1 DAY) AS NextDay;
+------------+
| NextDay    |
+------------+
| 2024-07-26 |
+------------+


m. Add two hours and 5000 minutes to the current date and print the new date.
mysql> SELECT ADDTIME(NOW(), "2:50");
+------------------------+
| ADDTIME(NOW(), "2:50") |
+------------------------+
| 2024-07-25 18:15:38    |
+------------------------+


n. Find the floor and ceil values of a floating point number. Also operate on the power, log,
modulus, round off and truncate functions.

mysql> select floor(5.3), ceil(5.3);
+------------+-----------+
| floor(5.3) | ceil(5.3) |
+------------+-----------+
|          5 |         6 |
+------------+-----------+
mysql> SELECT POWER(2, 3), LOG10(100);
+-------------+------------+
| POWER(2, 3) | LOG10(100) |
+-------------+------------+
|           8 |          2 |
+-------------+------------+
mysql> SELECT MOD(10, 3), ROUND(3.14159, 2), TRUNCATE(3.14159, 2);
+------------+-------------------+----------------------+
| MOD(10, 3) | ROUND(3.14159, 2) | TRUNCATE(3.14159, 2) |
+------------+-------------------+----------------------+
|          1 |              3.14 |                 3.14 |
+------------+-------------------+----------------------+


o. In the first name of the employee, match the following using regular expressions.
mysql> SELECT
    ->     CASE
    ->         WHEN 'Alice' REGEXP '^a' THEN 'Name starts with a'
    ->         ELSE 'Name does not start with a'
    ->     END AS result;
+--------------------+
| result             |
+--------------------+
| Name starts with a |
+--------------------+



p. Compare two strings and print the value ‘yes’ if they are equal, else print ‘no’.
mysql> SELECT CASE WHEN 'apple' = 'banana' THEN 'yes' ELSE 'no' END AS result;
+--------+
| result |
+--------+
| no     |
+--------+


q. Simulate the “IF... ELSE” construct in MySQL for a mark and grade setup.
mysql> SELECT
    ->     85 AS marks,
    ->     CASE
    ->         WHEN 85 >= 90 AND 85 <= 100 THEN 'A'
    ->         WHEN 85 >= 80 AND 85 < 90 THEN 'B'
    ->         WHEN 85 >= 70 AND 85 < 80 THEN 'C'
    ->         WHEN 85 >= 60 AND 85 < 70 THEN 'D'
    ->         WHEN 85 >= 0 AND 85 < 60 THEN 'F'
    ->         ELSE 'Invalid marks'
    ->     END AS grade;
+-------+-------+
| marks | grade |
+-------+-------+
|    85 | B     |
+-------+-------+


r. Use IFNULL to check whether a mathematical expression gives a NULL value or not.
mysql> SELECT IFNULL(10 / 5, 'Result is NULL') AS result;
+--------+
| result |
+--------+
| 2.0000 |
+--------+
